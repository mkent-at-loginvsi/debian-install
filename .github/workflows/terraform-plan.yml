name: "Terraform Plan"

on:
    pull_request:

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: "us-east-1"
    CONFIG_DIRECTORY: "./target"

jobs:
    terraform:
        name: Terraform Plan
        runs-on: ubuntu-latest
        
        steps:
        - name: Checkout
          uses: actions/checkout@v3

        # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1

        - name: Setup Infracost
          uses: infracost/actions/setup@v2
          # See https://github.com/infracost/actions/tree/master/setup for other inputs
          # If you can't use this action, see Docker images in https://infracost.io/cicd
          with:
              api-key: ${{ secrets.INFRACOST_API_KEY }}
          if: github.event_name == 'pull_request'

        # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
        - name: Terraform Init
          id: init
          run: terraform init

        # Checks that all Terraform configuration files adhere to a canonical format
        - name: Terraform Format
          id: fmt
          run: terraform fmt -check
    
        # Checks that all Terraform configuration files are correctly written
        - name: Terraform Validate
          id: validate
          run: terraform validate -no-color
        
        # Generates an execution plan for Terraform
        - name: Terraform Plan
          id: plan
          if: github.ref != 'refs/heads/main' || github.event_name == 'pull_request'
          run: |
              terraform plan -no-color -input=false \
              -out=TFplan.JSON
          continue-on-error: true